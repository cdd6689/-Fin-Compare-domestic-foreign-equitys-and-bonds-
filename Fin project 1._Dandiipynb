{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/core/magics/pylab.py:161: UserWarning: pylab import has clobbered these variables: ['copy', 'random', 'datetime']\n",
      "`%matplotlib` prevents importing * from pylab and numpy\n",
      "  \"\\n`%matplotlib` prevents importing * from pylab and numpy\"\n"
     ]
    }
   ],
   "source": [
    "#FINANCE Project\n",
    "#DANDI CHEN, Qingzi Zeng, Kachi Ugo\n",
    "\n",
    "#import\n",
    "from pandas import Series, DataFrame\n",
    "import pandas as pd\n",
    "import re\n",
    "from datetime import datetime\n",
    "import copy\n",
    "import  matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "%pylab inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import data\n",
    "Bonds_f = pd.read_csv('Foreign_Bond.csv')\n",
    "ETF_f = pd.read_csv('Foreign_ETF.csv')\n",
    "ETF_US = pd.read_csv('US_ETF.csv')\n",
    "Bonds_US = pd.read_csv('US_bonds.csv')\n",
    "Gold = pd.read_csv('Gold.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part I"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Foreign bonds annualized return, standard deviation and sharpe ratio and max drawdown"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "foreign bonds annualized return average 0.07249459276310266\n",
      "foreign bonds annualized return average 0.10344729268496909\n",
      "foreign bonds annualized sharpe ratio 0.7007877236949299\n"
     ]
    }
   ],
   "source": [
    "bond_f = Bonds_f\n",
    "bond_f['date'] = pd.to_datetime(bond_f['caldt'],format='%Y%m%d')\n",
    "bond_f['year'] = bond_f['date'].dt.to_period('Y').astype(str)\n",
    "#get return +1 so that the prod() function can be used \n",
    "bond_f['return'] = bond_f['dret']+1\n",
    "annualret_bond_f = bond_f.groupby(['year'])[['return']].prod()\n",
    "annualret_bond_f['return']= annualret_bond_f['return'] - 1\n",
    "annualret_bond_f=annualret_bond_f[1:]\n",
    "#averaged annualized return\n",
    "foreign_bondf_avg_ret = ((annualret_bond_f['return']+1).prod())**0.1-1\n",
    "foreign_bondf_std_ret = annualret_bond_f['return'].std()\n",
    "#results\n",
    "print 'foreign bonds annualized return average', foreign_bondf_avg_ret\n",
    "print 'foreign bonds annualized return average', foreign_bondf_std_ret\n",
    "print 'foreign bonds annualized sharpe ratio', foreign_bondf_avg_ret/foreign_bondf_std_ret\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#max drawdown\n",
    "bond_f1 = bond_f[['date','return']]\n",
    "bond_f1= bond_f1.set_index('date')\n",
    "bond_f1['cmlt_return'] = bond_f1['return']\n",
    "bond_f1['cmlt_return'].fillna(1)\n",
    "\n",
    "for i in range(1,len(bond_f1)):\n",
    "    bond_f1['cmlt_return'][i] = bond_f1['cmlt_return'][i-1]*bond_f1['cmlt_return'][i]\n",
    "\n",
    "bond_f1['cmlt_return']=  bond_f1['cmlt_return']*100\n",
    "plot(bond_f1[1:]['cmlt_return'])\n",
    "xlabel('date')\n",
    "ylabel('performance')\n",
    "title('performance for foreign bond')\n",
    "show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Foreign ETF annualized return, annualized return standard deviation, sharpe ratio and max drawdown"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "foreign bonds annualized return average 0.05770263399510167\n",
      "foreign bonds annualized return average 0.3142212322624955\n",
      "foreign bonds annualized sharpe ratio 0.18363696679445835\n"
     ]
    }
   ],
   "source": [
    "etf_f = ETF_f\n",
    "etf_f['date'] = pd.to_datetime(etf_f['caldt'],format='%Y%m%d')\n",
    "etf_f['year'] = etf_f['date'].dt.to_period('Y').astype(str)\n",
    "#get return +1 so that the prod() function can be used \n",
    "etf_f['return'] = etf_f['dret']+1\n",
    "annualret_etf_f = etf_f.groupby(['year'])[['return']].prod()\n",
    "annualret_etf_f['return']= annualret_etf_f['return'] - 1\n",
    "annualret_etf_f=annualret_etf_f[1:]\n",
    "#averaged annualized return\n",
    "foreign_etff_avg_ret = ((annualret_etf_f['return']+1).prod())**0.1-1\n",
    "foreign_etff_std_ret = annualret_etf_f['return'].std()\n",
    "#results\n",
    "print 'foreign bonds annualized return average', foreign_etff_avg_ret\n",
    "print 'foreign bonds annualized return average', foreign_etff_std_ret\n",
    "print 'foreign bonds annualized sharpe ratio', foreign_etff_avg_ret/foreign_etff_std_ret"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#max drawdown\n",
    "etf_f1 = etf_f[['date','return']]\n",
    "etf_f1= etf_f1.set_index('date')\n",
    "etf_f1['cmlt_return'] = etf_f1['return']\n",
    "etf_f1['cmlt_return'].fillna(1)\n",
    "\n",
    "for i in range(1,len(etf_f1)):\n",
    "    etf_f1['cmlt_return'][i] = etf_f1['cmlt_return'][i-1]*etf_f1['cmlt_return'][i]\n",
    "\n",
    "etf_f1['cmlt_return']=  etf_f1['cmlt_return']*100\n",
    "plot(etf_f1[1:]['cmlt_return'])\n",
    "xlabel('date')\n",
    "ylabel('performance')\n",
    "title('performance for foreign etf')\n",
    "show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### US ETF annualized return, standard deviation, sharpe ratio and max drawdown"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "foreign bonds annualized return average 0.12431683049046072\n",
      "foreign bonds annualized return average 0.08876355202970569\n",
      "foreign bonds annualized sharpe ratio 1.4005391587850915\n"
     ]
    }
   ],
   "source": [
    "etf_us = ETF_US\n",
    "etf_us['date'] = pd.to_datetime(etf_us['caldt'],format='%Y%m%d')\n",
    "etf_us['year'] = etf_us['date'].dt.to_period('Y').astype(str)\n",
    "#get return +1 so that the prod() function can be used \n",
    "etf_us['return'] = etf_us['dret']+1\n",
    "annualret_etf_us = etf_us.groupby(['year'])[['return']].prod()\n",
    "annualret_etf_us['return']= annualret_etf_us['return'] - 1\n",
    "annualret_etf_us=annualret_etf_us[1:]\n",
    "#averaged annualized return\n",
    "foreign_etfus_avg_ret = ((annualret_etf_us['return']+1).prod())**0.1-1\n",
    "foreign_etfus_std_ret = annualret_etf_us['return'].std()\n",
    "#results\n",
    "print 'foreign bonds annualized return average', foreign_etfus_avg_ret\n",
    "print 'foreign bonds annualized return average', foreign_etfus_std_ret\n",
    "print 'foreign bonds annualized sharpe ratio', foreign_etfus_avg_ret/foreign_etfus_std_ret"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#max drawdown\n",
    "etf_us1 = etf_us[['date','return']]\n",
    "etf_us1= etf_us1.set_index('date')\n",
    "etf_us1['cmlt_return'] = etf_us1['return']\n",
    "etf_us1['cmlt_return'].fillna(1)\n",
    "\n",
    "for i in range(1,len(etf_us1)):\n",
    "    etf_us1['cmlt_return'][i] = etf_us1['cmlt_return'][i-1]*etf_us1['cmlt_return'][i]\n",
    "\n",
    "etf_us1['cmlt_return']=  etf_us1['cmlt_return']*100\n",
    "plot(etf_us1[1:]['cmlt_return'])\n",
    "xlabel('date')\n",
    "ylabel('amount')\n",
    "title('performance of US ETF')\n",
    "show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### US bond annualized return, standard deviation, sharpe ratio and max drawdown"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "foreign bonds annualized return average 0.048488109996344786\n",
      "foreign bonds annualized return average 0.054299990867836455\n",
      "foreign bonds annualized sharpe ratio 0.8929671851025259\n"
     ]
    }
   ],
   "source": [
    "bond_us = Bonds_US\n",
    "bond_us['date'] = pd.to_datetime(bond_us['caldt'],format='%Y%m%d')\n",
    "bond_us['year'] = bond_us['date'].dt.to_period('Y').astype(str)\n",
    "#get return +1 so that the prod() function can be used \n",
    "bond_us['return'] = bond_us['dret']+1\n",
    "annualret_bond_us = bond_us.groupby(['year'])[['return']].prod()\n",
    "annualret_bond_us['return']= annualret_bond_us['return'] - 1\n",
    "annualret_bond_us=annualret_bond_us[1:]\n",
    "#averaged annualized return\n",
    "foreign_bondus_avg_ret = ((annualret_bond_us['return']+1).prod())**0.1-1\n",
    "foreign_bondus_std_ret = annualret_bond_us['return'].std()\n",
    "#results\n",
    "print 'foreign bonds annualized return average', foreign_bondus_avg_ret\n",
    "print 'foreign bonds annualized return average', foreign_bondus_std_ret\n",
    "print 'foreign bonds annualized sharpe ratio', foreign_bondus_avg_ret/foreign_bondus_std_ret\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "bond_us1 = bond_us[['date','return']]\n",
    "bond_us1= bond_us1.set_index('date')\n",
    "bond_us1['cmlt_return'] = bond_us1['return']\n",
    "bond_us1['cmlt_return'].fillna(1)\n",
    "\n",
    "for i in range(1,len(bond_us1)):\n",
    "    bond_us1['cmlt_return'][i] = bond_us1['cmlt_return'][i-1]*bond_us1['cmlt_return'][i]\n",
    "\n",
    "bond_us1['cmlt_return']=  bond_us1['cmlt_return']*100\n",
    "plot(bond_us1[1:]['cmlt_return'])\n",
    "xlabel('date')\n",
    "ylabel('amount')\n",
    "title('performance of US bond')\n",
    "show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Gold annualized return, standard deviation, sharpe ratio and max drawdown"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "foreign Golds annualized return average 0.03596297867551068\n",
      "foreign Golds annualized return average 0.16761341200498267\n",
      "foreign Golds annualized sharpe ratio 0.21455907522747406\n"
     ]
    }
   ],
   "source": [
    "Gold = Gold\n",
    "Gold['date'] = pd.to_datetime(Gold['caldt'],format='%Y%m%d')\n",
    "Gold['year'] = Gold['date'].dt.to_period('Y').astype(str)\n",
    "#get return +1 so that the prod() function can be used \n",
    "Gold['return'] = Gold['dret']+1\n",
    "annualret_Gold = Gold.groupby(['year'])[['return']].prod()\n",
    "annualret_Gold['return']= annualret_Gold['return'] - 1\n",
    "annualret_Gold=annualret_Gold[1:]\n",
    "#averaged annualized return\n",
    "foreign_Gold_avg_ret = ((annualret_Gold['return']+1).prod())**0.1-1\n",
    "foreign_Gold_std_ret = annualret_Gold['return'].std()\n",
    "#results\n",
    "print 'foreign Golds annualized return average', foreign_Gold_avg_ret\n",
    "print 'foreign Golds annualized return average', foreign_Gold_std_ret\n",
    "print 'foreign Golds annualized sharpe ratio', foreign_Gold_avg_ret/foreign_Gold_std_ret"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gold11 = Gold[['date','return']]\n",
    "gold11= gold11.set_index('date')\n",
    "\n",
    "# #graph\n",
    "gold11['cmlt_return'] = gold11['return']\n",
    "gold11['cmlt_return'].fillna(1)\n",
    "\n",
    "for i in range(1,len(gold11)):\n",
    "    gold11['cmlt_return'][i] = gold11['cmlt_return'][i-1]*gold11['cmlt_return'][i]\n",
    "\n",
    "gold11['cmlt_return']=  gold11['cmlt_return']*100\n",
    "# plot(gold11[1:]['cmlt_return'],bond_f1[1:]['cmlt_return'],bond_us1[1:]['cmlt_return'],\\\n",
    "#     etf_us1[1:]['cmlt_return'],etf_f1[1:]['cmlt_return'])\n",
    "# xlabel('date')\n",
    "# ylabel('performance')\n",
    "# title('performance for gold')\n",
    "# show()\n",
    "\n",
    "fig= plt.figure(figsize=(10,8))\n",
    "gold11[1:]['cmlt_return'].plot(label='gold')\n",
    "bond_f1[1:]['cmlt_return'].plot(label='foreign bond')\n",
    "bond_us1[1:]['cmlt_return'].plot(label='US bond')\n",
    "etf_us1[1:]['cmlt_return'].plot(label='US ETF')\n",
    "etf_f1[1:]['cmlt_return'].plot(label='foreign ETF')\n",
    "\n",
    "\n",
    "#show graph\n",
    "ylabel('performance')\n",
    "legend(loc='best')\n",
    "show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# part II"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### with weights"
   ]
  },
  {
   "attachments": {
    "Screen%20Shot%202019-09-18%20at%203.56.51%20PM.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Screen%20Shot%202019-09-18%20at%203.56.51%20PM.png](attachment:Screen%20Shot%202019-09-18%20at%203.56.51%20PM.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "agg_gw = pd.DataFrame(gold11.index)\n",
    "#weights\n",
    "USM = 3\n",
    "IM = 2.5\n",
    "USB = 2\n",
    "IB = 1.5\n",
    "OAC = 1\n",
    "agg_gw = agg_gw.set_index('date')\n",
    "\n",
    "#start constructing aggregate portfolio return given, investing $1000 initially\n",
    "agg_gw['USM'] = etf_us1['cmlt_return']*USM\n",
    "agg_gw['USMshift'] = agg_gw['USM'].shift(1).fillna(1)\n",
    "agg_gw['USM growth'] = etf_us1['return']\n",
    "agg_gw['IM'] = etf_f1['cmlt_return']*IM\n",
    "agg_gw['IMshift'] = agg_gw['IM'].shift(1).fillna(1)\n",
    "agg_gw['IM growth'] = etf_f1['return']\n",
    "agg_gw['USB'] = bond_us1['cmlt_return']*USB\n",
    "agg_gw['USBshift'] = agg_gw['USB'].shift(1).fillna(1)\n",
    "agg_gw['USB growth'] = bond_us1['return']\n",
    "agg_gw['IB'] = bond_f1['cmlt_return']*IB\n",
    "agg_gw['IBshift'] = agg_gw['IB'].shift(1).fillna(1)\n",
    "agg_gw['IB growth'] = bond_f1['return']\n",
    "agg_gw['OAC'] = gold11['cmlt_return']*OAC\n",
    "agg_gw['OACshift'] = agg_gw['OAC'].shift(1).fillna(1)\n",
    "agg_gw['OAC growth'] = gold11['return']\n",
    "agg_gw['Total'] =  agg_gw['USM'] + agg_gw['IM'] + agg_gw['USB'] + agg_gw['IB'] + agg_gw['OAC']\n",
    "agg_gw['Totalshift'] = agg_gw['Total'].shift(1).fillna(1)\n",
    "agg_gw['month'] = agg_gw.index.to_period('M').astype(str)\n",
    "agg_gw['balanced'] = agg_gw['Total']\n",
    "agg_gw\n",
    "lastmonth = 0     \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  del sys.path[0]\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:14: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:15: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  from ipykernel import kernelapp as app\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:16: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  app.launch_new_instance()\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:17: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  after removing the cwd from sys.path.\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \"\"\"\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:7: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  import sys\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:9: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  if __name__ == '__main__':\n"
     ]
    }
   ],
   "source": [
    "for i in range(1,len(agg_gw)):\n",
    "    month = agg_gw['month'][i]\n",
    "    if lastmonth == month:\n",
    "        agg_gw['USM'][i] = agg_gw['USMshift'][i]*agg_gw['USM growth'][i]\n",
    "        agg_gw['IM'][i] = agg_gw['IMshift'][i]*agg_gw['IM growth'][i]\n",
    "        agg_gw['USB'][i] = agg_gw['USBshift'][i]*agg_gw['USB growth'][i]\n",
    "        agg_gw['IB'][i] = agg_gw['IBshift'][i]*agg_gw['IB growth'][i]\n",
    "        agg_gw['OAC'][i] = agg_gw['OACshift'][i]*agg_gw['OAC growth'][i]\n",
    "        agg_gw['balanced'][i] = agg_gw['USM'][i] + agg_gw['IM'][i] + agg_gw['USB'][i]\\\n",
    "                                + agg_gw['IB'][i] + agg_gw['OAC'][i]\n",
    "        lastmonth=month\n",
    "    else:\n",
    "        #get the weight and recalculate the first day of the month number \n",
    "        agg_gw['USM'][i] = agg_gw['Totalshift'][i]*0.3*agg_gw['USM growth'][i]\n",
    "        agg_gw['IM'][i] = agg_gw['Totalshift'][i]*0.25*agg_gw['IM growth'][i]\n",
    "        agg_gw['USB'][i] = agg_gw['Totalshift'][i]*0.2*agg_gw['USB growth'][i]\n",
    "        agg_gw['IB'][i] = agg_gw['Totalshift'][i]*0.15*agg_gw['IB growth'][i]\n",
    "        agg_gw['OAC'][i] = agg_gw['Totalshift'][i]*0.1*agg_gw['OAC growth'][i]\n",
    "        agg_gw['balanced'][i] = agg_gw['USM'][i] + agg_gw['IM'][i] + agg_gw['USB'][i]\\\n",
    "                                + agg_gw['IB'][i] + agg_gw['OAC'][i]\n",
    "        lastmonth = month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Portfolio annualized return average 0.08179968719327513\n",
      "Portfolio annualized return standard deviation 0.11936329005928262\n",
      "Portfolio annualized sharpe ratio 0.6853002053868382\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \"\"\"\n"
     ]
    }
   ],
   "source": [
    "#get return from balanced\n",
    "agg_gw['year'] = agg_gw.index.to_period('Y').astype(str)\n",
    "agg_gw['return_balanced'] = agg_gw['balanced'].shift(1).fillna(1)\n",
    "agg_gw['return_balanced'] = agg_gw['balanced'] / agg_gw['return_balanced']\n",
    "agg_gw['return_balanced'][0:1] = agg_gw['balanced'][0:1]/1000\n",
    "agg_annual_return =agg_gw.groupby(['year'])[['return_balanced']].prod()\n",
    "agg_annual_return['return']= agg_annual_return['return_balanced'] - 1\n",
    "#calcualte annualized return for the portfolio\n",
    "port1_ann_return= ((agg_annual_return['return']+1).prod())**0.1-1\n",
    "port1_ann_return_std = agg_annual_return['return'].std()\n",
    "#results\n",
    "print 'Portfolio annualized return average', port1_ann_return\n",
    "print 'Portfolio annualized return standard deviation', port1_ann_return_std\n",
    "print 'Portfolio annualized sharpe ratio', port1_ann_return/port1_ann_return_std"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig= plt.figure(figsize=(8,4))\n",
    "gold11[1:]['cmlt_return'].plot(label='gold')\n",
    "bond_f1[1:]['cmlt_return'].plot(label='foreign bond')\n",
    "bond_us1[1:]['cmlt_return'].plot(label='US bond')\n",
    "etf_us1[1:]['cmlt_return'].plot(label='US ETF')\n",
    "etf_f1[1:]['cmlt_return'].plot(label='foreign ETF')\n",
    "(agg_gw[1:]['balanced']/10).plot(label = 'Portfolio')\n",
    "(agg_gw[1:]['Total']/100).plot(label = 'unbalanced')\n",
    "#show graph\n",
    "ylabel('performance')\n",
    "legend(loc='best')\n",
    "title('Comparing Portfolio with individual assets')\n",
    "show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "import random\n",
    "def getrandom():\n",
    "    weight_list = []\n",
    "    counter = 0\n",
    "    while counter<= 20:\n",
    "        weights = {}\n",
    "        USM_ = random.randrange(10,101,5)\n",
    "        IM_ = random.randrange(10,81,5)\n",
    "        USB_ = random.randrange(10,51,5)\n",
    "        IB_ = random.randrange(10,51,5)\n",
    "        OAC_ = random.randrange(10,51,5)\n",
    "\n",
    "        total = float(USM_+IM_+USB_+IB_+OAC_)\n",
    "        USM1 = round(USM_/total,5)\n",
    "        IM1 = round(IM_/total,5)\n",
    "        USB1 = round(USB_/total,5)\n",
    "        IB1= round(IB_/total,5)\n",
    "        OAC1= round(OAC_/total,5)\n",
    "\n",
    "\n",
    "        #check if >0.45\n",
    "        weight_scale = ['this weight',USM1,IM1,USB1,IB1,OAC1]\n",
    "\n",
    "        for i in weight_scale:\n",
    "            if i>0.45:\n",
    "                bad = True\n",
    "            else:\n",
    "                bad = False\n",
    "\n",
    "        if bad == False:\n",
    "            weights.update({'USM':USM_/total})\n",
    "            weights.update({'IM':IM_/total})\n",
    "            weights.update({'USB':USB_/total})\n",
    "            weights.update({'IB' :IB_/total})\n",
    "            weights.update({'OAC':OAC_/total})\n",
    "            weight_list.append(weights)\n",
    "            counter =counter+1\n",
    "    return weight_list\n",
    "w = getrandom()  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{}\n",
      "0\n"
     ]
    }
   ],
   "source": [
    "largest_weights = {}\n",
    "largest_sharpe = 0\n",
    "agg_gw = pd.DataFrame(gold11.index)\n",
    "agg_gw = agg_gw.set_index('date')\n",
    "agg_gw['USM growth'] = etf_us1['return']\n",
    "agg_gw['IM growth'] = etf_f1['return']\n",
    "agg_gw['USB growth'] = bond_us1['return']\n",
    "agg_gw['IB growth'] = bond_f1['return']\n",
    "agg_gw['OAC growth'] = gold11['return']\n",
    "agg_gw['month'] = agg_gw.index.to_period('M').astype(str)\n",
    "agg_gw['year'] = agg_gw.index.to_period('Y').astype(str)\n",
    "\n",
    "print largest_weights\n",
    "print largest_sharpe\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "DF = []\n",
    "for i in w:\n",
    "    USM = i['USM']\n",
    "    IM = i['IM']\n",
    "    USB = i['USB']\n",
    "    IB = i['IB']\n",
    "    OAC = i['OAC']\n",
    "\n",
    "    #start constructing aggregate portfolio return given, investing $1000 initially\n",
    "    agg_gw['USM'] = etf_us1['cmlt_return']*USM*100\n",
    "    agg_gw['IM'] = etf_f1['cmlt_return']*IM*100\n",
    "    agg_gw['USB'] = bond_us1['cmlt_return']*USB*100\n",
    "    agg_gw['IB'] = bond_f1['cmlt_return']*IB*100\n",
    "    agg_gw['OAC'] = gold11['cmlt_return']*OAC*100\n",
    "    agg_gw['Total'] =  agg_gw['USM'] + agg_gw['IM'] + agg_gw['USB'] + agg_gw['IB'] + agg_gw['OAC']\n",
    "    agg_gw['balanced'] = agg_gw['Total']\n",
    "    lastmonth = 0\n",
    "    DF.append(agg_gw)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(w)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:17: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:19: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:20: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:21: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:22: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:9: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  if __name__ == '__main__':\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:10: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  # Remove the CWD from sys.path while we load stuff.\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:11: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  # This is added back by InteractiveShellApp.init_path()\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:12: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  if sys.path[0] == '':\n",
      "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  del sys.path[0]\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-23-9d7ec8847489>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m             \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'USB'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'USB'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'USB growth'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m             \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'IB'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'IB'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'IB growth'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m             \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'OAC'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'OAC'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'OAC growth'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m             \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'balanced'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'USM'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'IM'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'USB'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m                                    \u001b[0;34m+\u001b[0m \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'IB'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mDFF\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'OAC'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m             \u001b[0mlastmonth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmonth\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pandas/core/series.pyc\u001b[0m in \u001b[0;36m__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   1036\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1037\u001b[0m         \u001b[0;31m# do the setitem\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1038\u001b[0;31m         \u001b[0mcacher_needs_updating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_is_chained_assignment_possible\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1039\u001b[0m         \u001b[0msetitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1040\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcacher_needs_updating\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pandas/core/generic.pyc\u001b[0m in \u001b[0;36m_check_is_chained_assignment_possible\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   3197\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mref\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mref\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_mixed_type\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3198\u001b[0m                 self._check_setitem_copy(stacklevel=4, t='referant',\n\u001b[0;32m-> 3199\u001b[0;31m                                          force=True)\n\u001b[0m\u001b[1;32m   3200\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3201\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_copy\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pandas/core/generic.pyc\u001b[0m in \u001b[0;36m_check_setitem_copy\u001b[0;34m(self, stacklevel, t, force)\u001b[0m\n\u001b[1;32m   3243\u001b[0m             \u001b[0;31m# the copy weakref\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3244\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3245\u001b[0;31m                 \u001b[0mgc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcollect\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3246\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mgc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_referents\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_copy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3247\u001b[0m                     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_copy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "\n",
    "for y in range(0,len(DF)):\n",
    "    DFF = DF[y]\n",
    "    lastmonth = agg_gw['month'][0]\n",
    "    for i in range(1,len(DFF)):\n",
    "        month = DFF['month'][i]\n",
    "        if lastmonth == month:\n",
    "            DFF['USM'][i] = DFF['USM'][i-1]*DFF['USM growth'][i]\n",
    "            DFF['IM'][i] = DFF['IM'][i-1]*DFF['IM growth'][i]\n",
    "            DFF['USB'][i] = DFF['USB'][i-1]*DFF['USB growth'][i]\n",
    "            DFF['IB'][i] = DFF['IB'][i-1]*DFF['IB growth'][i]\n",
    "            DFF['OAC'][i] = DFF['OAC'][i-1]*DFF['OAC growth'][i]\n",
    "            DFF['balanced'][i] = DFF['USM'][i] + DFF['IM'][i] + DFF['USB'][i]\\\n",
    "                                    + DFF['IB'][i] + DFF['OAC'][i]\n",
    "            lastmonth=month\n",
    "        else:\n",
    "            #get the weight and recalculate the first day of the month number \n",
    "            DFF['USM'][i] = DFF['Total'][i-1]*0.3*DFF['USM growth'][i]\n",
    "            DFF['IM'][i] = DFF['Total'][i-1]*0.25*DFF['IM growth'][i]\n",
    "            DFF['USB'][i] = DFF['Total'][i-1]*0.2*DFF['USB growth'][i]\n",
    "            DFF['IB'][i] = DFF['Total'][i-1]*0.15*DFF['IB growth'][i]\n",
    "            DFF['OAC'][i] = DFF['Total'][i-1]*0.1*DFF['OAC growth'][i]\n",
    "            DFF['balanced'][i] = DFF['USM'][i] + DFF['IM'][i] + DFF['USB'][i]\\\n",
    "                                    + DFF['IB'][i] + DFF['OAC'][i]\n",
    "            lastmonth = month\n",
    "    DFF['year'] = DFF.index.to_period('Y').astype(str)\n",
    "    DFF['return_balanced'] = DFF['balanced'].shift(1).fillna(1)\n",
    "    DFF['return_balanced'] = DFF['balanced'] / DFF['return_balanced']\n",
    "    DFF['return_balanced'][0:1] = DFF['balanced'][0:1]/1000\n",
    "    agg_annual_return =DFF.groupby(['year'])[['return_balanced']].prod()\n",
    "    agg_annual_return['return']= agg_annual_return['return_balanced'] - 1\n",
    "    #calcualte annualized return for the portfolio\n",
    "    port1_ann_return= ((agg_annual_return['return']+1).prod())**0.1-1\n",
    "    port1_ann_return_std = agg_annual_return['return'].std()\n",
    "    largest_sharpe.append(sharpe)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "for y in DF:\n",
    "    for i in range(1,len(agg_gw)):\n",
    "        row = agg_gw[i]\n",
    "        month = agg_gw['month'][i]\n",
    "        if lastmonth == month:\n",
    "            agg_gw['USM'][i] = agg_gw['USM'][i-1]*agg_gw['USM growth'][i]\n",
    "            agg_gw['IM'][i] = agg_gw['IM'][i-1]*agg_gw['IM growth'][i]\n",
    "            agg_gw['USB'][i] = agg_gw['USB'][i-1]*agg_gw['USB growth'][i]\n",
    "            agg_gw['IB'][i] = agg_gw['IB'][i-1]*agg_gw['IB growth'][i]\n",
    "            agg_gw['OAC'][i] = agg_gw['OAC'][i-1]*agg_gw['OAC growth'][i]\n",
    "            agg_gw['balanced'][i] = agg_gw['USM'][i] + agg_gw['IM'][i] + agg_gw['USB'][i]\\\n",
    "                                    + agg_gw['IB'][i] + agg_gw['OAC'][i]\n",
    "            lastmonth=month\n",
    "        else: \n",
    "            agg_gw['USM'][i] = agg_gw['Total'][i-1]*USM*agg_gw['USM growth'][i]\n",
    "            agg_gw['IM'][i] = agg_gw['Total'][i-1]*IM*agg_gw['IM growth'][i]\n",
    "            agg_gw['USB'][i] = agg_gw['Total'][i-1]*USB*agg_gw['USB growth'][i]\n",
    "            agg_gw['IB'][i] = agg_gw['Total'][i-1]*IB*agg_gw['IB growth'][i]\n",
    "            agg_gw['OAC'][i] = agg_gw['Total'][i-1]*OAC*agg_gw['OAC growth'][i]\n",
    "            agg_gw['balanced'][i] = agg_gw['USM'][i] + agg_gw['IM'][i] + agg_gw['USB'][i]\\\n",
    "                                    + agg_gw['IB'][i] + agg_gw['OAC'][i]\n",
    "            lastmonth = month\n",
    "        agg_gw['return_balanced'] = agg_gw['balanced'].shift(1).fillna(1)\n",
    "        agg_gw['return_balanced'] = agg_gw['balanced'] / agg_gw['return_balanced']\n",
    "        agg_gw['return_balanced'][0:1] = agg_gw['balanced'][0:1]/1000\n",
    "        agg_annual_return =agg_gw.groupby(['year'])[['return_balanced']].prod()\n",
    "        agg_annual_return['return']= agg_annual_return['return_balanced'] - 1\n",
    "        #calcualte annualized return for the portfolio\n",
    "        port1_ann_return= ((agg_annual_return['return']+1).prod())**0.1-1\n",
    "        port1_ann_return_std = agg_annual_return['return'].std()\n",
    "        sharpe = port1_ann_return/port1_ann_return_std"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lastmonth = agg_gw['month'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lastmonth"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
